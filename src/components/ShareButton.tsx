import React from 'react';
import { TouchableOpacity, Text, StyleSheet, Alert } from 'react-native';
import * as Sharing from 'expo-sharing';
import * as FileSystem from 'expo-file-system';
import { MaterialIcons } from '@expo/vector-icons';
import { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';
import { formatNumber, safeToFixed } from '../utils/formatNumber';

interface Data {
  name: string;
  symbol: string;
  value: number;
  percentage: number;
  color: string;
  image: string;
  url: string;
  decimals?: number;
}

type ShareButtonProps = {
  data: Data[];
  totalValue: number;
};

export const ShareButton = ({ data, totalValue }: ShareButtonProps) => {
  const handleShare = async () => {
    try {
      // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö
      if (!data || data.length === 0) {
        Alert.alert('Error', 'Generate a portfolio first');
        return;
      }

      // 2. –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Ñ–∞–π–ª–∞
      const content = [
        `üìä Crypto portfolio ($${safeToFixed(totalValue)})`,
        `Generated by: ${new Date().toLocaleString()}`,
        '---------------------------------',
        ...data.map(item => 
          `${item.name} (${item.symbol}):\n` +
          `- Part: ${item.percentage}%\n` +
          `- Sum: ${formatNumber(item.value, { isCurrency: true, currency: 'USD' })}\n` +
          (item.url ? `- URL: ${item.url}\n` : '') +
          '---------------------------------'
        ),
        '\nMade with Doughfolio App'
      ].join('\n');

      // 3. –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
      const fileUri = `${FileSystem.cacheDirectory}crypto_portfolio_${Date.now()}.txt`;
      await FileSystem.writeAsStringAsync(fileUri, content, {
        encoding: FileSystem.EncodingType.UTF8,
      });

      // 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —à–∞—Ä–∏–Ω–≥–∞
      if (!(await Sharing.isAvailableAsync())) {
        Alert.alert('Error', 'The "Share" function is not available');
        return;
      }

      // 5. –û—Ç–∫—Ä—ã—Ç–∏–µ –¥–∏–∞–ª–æ–≥–∞ —à–∞—Ä–∏–Ω–≥–∞
      await Sharing.shareAsync(fileUri, {
        mimeType: 'text/plain',
        dialogTitle: 'Export crypto portfolio',
        UTI: 'public.plain-text',
      });

    } catch (error) {
      console.error('Sharing failed:', error);
      Alert.alert('Error', 'Failed to export data');
    }
  };

  return (
    <TouchableOpacity onPress={handleShare} style={styles.button}>
      <MaterialIcons name="share" size={wp('5.09%')} color="#FF6E76" />
      <Text style={styles.text}>Share</Text>
    </TouchableOpacity>
  );
};


const styles = StyleSheet.create({
  button: {
    backgroundColor: 'white',
    padding: 10,
    borderRadius: 13,
    margin: 5,
    flexDirection: 'row', // –∏–∫–æ–Ω–∫–∞ + —Ç–µ–∫—Å—Ç –≤ —Ä—è–¥
    alignItems: 'center',
    shadowColor: '#000',
    shadowOffset: { width: 4, height: 6 },
    shadowOpacity: 0.2,
    shadowRadius: 16,
    elevation: 8,
    width: wp('21.81%'),
    justifyContent: 'center'
  },
  text: {
    color: 'black',
    fontWeight: 'bold',
    marginLeft: 5,
    fontSize: wp('3.63%')
  },
});
